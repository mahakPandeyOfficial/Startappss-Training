MVC Architecture (Model-View-Controller)
MVC is a software design pattern commonly used for developing user interfaces that divides an application into three interconnected components:


The MVC architecture provides a structured way to build scalable applications.

-> Model: 
        Model represents the structure of data, the format and the constraints with which it is stored. It maintains the data of the application. Essentially, it is the database part of the application.

-> View: 
        View is what is presented to the user. Views utilize the Model and present data in a form in which the user wants. A user can also be allowed to make changes to the data presented to the user. They consist of static and dynamic pages which are rendered or sent to the user when the user requests them.

-> Controller:
        Controller controls the requests of the user and then generates appropriate response which is fed to the viewer. Typically, the user interacts with the View, which in turn generates the appropriate request, this request will be handled by a controller. The controller renders the appropriate view with the model data as a response.

So, to sum it up:

-> Model is data part.
-> View is User Interface part.
-> Controller is request-response handler.
-> Routes will be part of Controller only.



Diagram / FLOW of DATA in MVC: 


                          ┌────────────┐
                          │  Database  │
                          └────┬───────┘
                               ▲
         ┌────────────┐        │        ┌────────────-┐
         │   Model     │◄──────┘───────►│    View     │
         │ (Handles    │                │ (Handles    │
         │  Data Logic)│                │  UI/Render) │
         └────┬────────┘                └────┬────────┘
              ▲                               ▲
              │                               │
        ┌─────┴─────┐                   ┌─────┴──────┐
        │ Controller│◄─────────────────►│  End User  │
        │ (Handles  │   Request/Response│            │
        │  Flow)    │                   └────────────┘
        └───────────┘

Explaination : 

        -> Model: Interacts with the database and handles business/data logic.

        -> View: Presents data to the user; dynamically updated.

        -> Controller: Takes input from the user, calls the model and selects the view.

        -> Database: Actual data storage.

        -> End User: Interacts with the system via UI.


