#### Introduction to Node JS: Node.js was created in 2009 by Ryan Dahl

   Node.js ek JavaScript runtime environment hai jiske through aap JavaScript ko browser ke bahar (server side) pe run kar sakte ho.

    ➡️ Ye Chrome ke V8 engine par based hai (jo browser me JavaScript chalata hai).

    ➡️ Mainly use hota hai fast, scalable aur real-time applications banane ke liye (jaise chat apps, APIs, etc.).
    Node.js is an open-source and cross-platform JavaScript runtime environment. It is a popular tool for almost any kind of project! Node.js runs the V8 JavaScript engine, Google Chrome's core, outside the browser. This allows Node.js to be very performant. A Node.js app runs in a single process, without creating a new thread for every request.

    Node.js provides a set of asynchronous I/O primitives in its standard library that prevent JavaScript code from blocking and generally, libraries in Node.js are written using non-blocking paradigms, making blocking behavior the exception rather than the norm.

    What are the FEATURES that are added into V8 for making a  NODE.JS:

    -> libuv : A C++ library that adds asynchronous I/O, event loop, and thread pool to support non-blocking operations (like file system, network, DNS, etc.).

    -> Node Api's : Built-in modules like fs, http, path, os, crypto, etc., were added so JavaScript could interact with files, servers, and system resources.

    -> C++ Binding : 	Native C++ bindings are used to connect V8 to system-level features via libraries like libuv. This allows Node to perform tasks that browsers cannot.

    -> Module Systems ( Common JS) : Node.js added require() and module.exports to support modular JavaScript code outside the browser.

    -> EventEmmiter: Node includes an EventEmitter class to create and handle events — useful for real-time and I/O-based systems.

    -> Global Object: 	Things like __dirname, process, global, and Buffer were introduced to provide environment-specific information.

    -> REPL (Read-Eval-Print Loop) : Node.js includes a command line REPL tool to experiment with Javascript directly in the terminal.
    
    -> npm Ecosystem: Node added a support for a package manager ( npm ) that allows developer to install and manages external librariers easly with just one simple command.

    ****NOTE**** 
        ** V8 sirf JavaScript run karta hai, browser ke liye.

        ** Node.js ne V8 ke upar system-level features add kiye — jaise file system, HTTP server, etc.

        ** Ye kaam libuv, Node’s C++ bindings, aur custom APIs ke through hota hai.

        ** Is wajah se hum JavaScript se backend server bhi bana sakte hain.

      Digramitacallyyy Showing asynchronous Operations:


                Clients
                 ______                                                               ((((workers))))
                |______|  --->           ----------->   delegate long timing jobs      ----------->
                 ______       request    <-----------    callback                      <-----------
                |______|  ---> 


#### Diffrence Between Browser and Node.JS

     NodeJS                                  |                 Browser
1. It support Server Side                    |   1. It support Client Side environment
2. Global object used is "global"            |   2. Global object used is "window"
3. API are available as File System,         |   3. API available are DOM, localstorage, fetch , alert.
   HTTPS, Buffer etc.                        |
4. Modules supports are CommonJS(require,    |   4. It supports ES Modules (import, export).
   module.export).                           |
5. It provides access to File System.        |   5. It do not provide access to File bcz of security reason.
  (fs modules).                              |  
6. It Dont proovides access to DOM           |   6. It provides Full DOM Access.
7. Package manager available is NPM          |   7. It does'nt provides packahge manager.

8  Node.js JavaScript ko browser ke bahar    |   8. Browser JS sirf web pages ke andar chalta hai.
   chalaata hai (server pe).


#### Modules : We split our code into different files to maintain, organize and reuse code whenever possible. A module system allows us to split and include code and import code written by other developers whenever required.

      CommonJS => CommonJS is a module system for JavaScript, mostly used in Node.js, to write modular and reusable code by splitting it into separate files.

       In simple terms:

         ** CommonJS allows you to export functions, objects, or variables from one file, and import them in another using require().

       Syntax :
       
            Export something - 	module.exports = value
            Import something - 	const x = require('...')  
      
      ESM (ECMAScript Modules) => ESM stands for ECMAScript Modules, which is the official, modern  standard for using modules in JavaScript — supported by browsers and Node.js (with small setup).
      ESM allows you to import/export code between files using import and export keywords.

         - It is standardize by Javascript.
         - It works on both Browser and Node.JS
         - It Allows Tree Shaking as unused code is removed.
         - It provides Cleaner and more reusable and readable code. 

         ***Syntax:

         "export" : It is used to send and then use the function variable or class outof the file.
         "import" : It is used to take use of Code from other files.

         These methods can works in both browser and Node.js (ES6).


     NOTE:
     __________________________________________________________________________________
    |  In browsers, the top-level scope is the global scope, and its global object is  |
    | called the window object. Within the browser, var something will define a new    | 
    |global variable inside the window object. In Node.js, this is different.          |
    | The top-level scope is not the global scope; var something inside a Node.js      |
    |module will be local to that module. 
    ____________________________________________________________________________________                                                             
    
##### NPM
  
  npm is the world's largest software registry. Open source developers from every continent use npm to share and borrow packages, and many organizations use npm to manage private development as well.

        npm consists of three distinct components:

        - the website
        - the Command Line Interface (CLI)
        - the registry

  It is two things: first and foremost, it is an online repository for the publishing of open-source Node.js projects; second, it is a command-line utility for interacting with said repository that aids in package installation, version management, and dependency management. A plethora of Node.js libraries and applications are published on npm, and many more are added every day
   

        🚀 What is npx?
            npx is a command-line tool that comes with npm (version 5.2+ and later).
            👉 It lets you run Node.js packages directly from the command line, without installing them globally.

            | `npm install`                   | `npx`                               |
            | ------------------------------- | ----------------------------------- |
            | Installs package (local/global) | Executes package directly           |
            | Leaves files on disk            | No permanent files unless needed    |
            | Used for dependencies           | Used for one-time command execution |


#### Protocol Used to Setup Server used in internet:

     ** HTTP (HyperText Transfer Protocol):
      - It Facilitates communication between a web browser and a server to transfer web pages.
      - It Sends data in plain text (no encryption).
      - Used for basic website browsing without security.

     ** HTTPS (HyperText Transfer Protocol Secure):
      - It is a secure version of HTTP Protocol , encypt data for secure communication.
      - It uses SSL/TLS to encrpt data for secure communication.
      - Used in online banking and ecommerce 

     ** TCP (Transmission Control Protocol):
      - Ensures reliable, ordered and error-checking while deliverry over the internet.
      - It Establishes a connection before data is transmitted.
      